---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
    const posts = await getCollection('blog', ({ data }) => import.meta.env.DEV || !data.draft);
    return posts.map((post) => ({ params: { slug: post.slug } }));
}

const { slug } = Astro.params;
const post = (await getCollection('blog')).find((p) => p.slug === slug) as CollectionEntry<'blog'>;
if (!post) {
    throw new Error('Post not found');
}
const { Content } = await post.render();
const { title, description, cover, pubDate, tags } = post.data;
const allPosts = (await getCollection('blog', ({ data }) => import.meta.env.DEV || !data.draft)).sort(
    (a, b) => a.data.pubDate.getTime() - b.data.pubDate.getTime()
);
const currentIndex = allPosts.findIndex((p) => p.slug === post.slug);
const previous = currentIndex > 0 ? allPosts[currentIndex - 1] : null;
const next = currentIndex < allPosts.length - 1 ? allPosts[currentIndex + 1] : null;
---

<Layout title={title} description={description}>
    <article class="prose prose-invert mx-auto max-w-3xl px-4 py-10">
        <header class="mb-6">
            <h1 class="mb-2">{title}</h1>
            <p class="text-sm opacity-80">{pubDate.toLocaleDateString()}</p>
        </header>
        {cover && <img src={cover} alt={title} loading="lazy" class="rounded-lg" />}
        <Content />
        {
            tags?.length ? (
                <ul class="mt-8 flex flex-wrap gap-2 text-xs">
                    {tags.map((t) => (
                        <li>
                            <a
                                href={`/blog/tags/${t}/`}
                                class="px-2 py-1 rounded-full bg-white/10 hover:bg-white/20 focus:outline-none focus:ring-2 focus:ring-white/60"
                            >
                                #{t}
                            </a>
                        </li>
                    ))}
                </ul>
            ) : null
        }
    </article>
    <nav class="mx-auto max-w-3xl px-4 py-6 flex justify-between text-sm">
        {
            previous ? (
                <a href={`/blog/${previous.slug}/`} class="underline">
                    ← {previous.data.title}
                </a>
            ) : (
                <span />
            )
        }
        {
            next ? (
                <a href={`/blog/${next.slug}/`} class="underline">
                    {next.data.title} →
                </a>
            ) : (
                <span />
            )
        }
    </nav>
</Layout>
