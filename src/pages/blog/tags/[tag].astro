---
import Layout from '../../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
    const posts = await getCollection('blog', ({ data }) => import.meta.env.DEV || !data.draft);
    const tagSet = new Set<string>();
    for (const p of posts) {
        for (const t of p.data.tags || []) tagSet.add(t);
    }
    return Array.from(tagSet).map((tag) => ({ params: { tag } }));
}

const { tag } = Astro.params;
const allPosts = await getCollection('blog', ({ data }) => (import.meta.env.DEV || !data.draft) && (data.tags || []).includes(tag as string));
const posts = allPosts.sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());
const site = Astro.site?.origin || '';
const canonical = `${site}/blog/tags/${tag}/`;
---

<Layout title={`Posts tagged ${tag}`}>
    <head>
        <link rel="canonical" href={canonical} />
    </head>
    <main class="mx-auto max-w-3xl px-4 py-10">
        <h1 class="text-3xl font-semibold mb-6">Posts tagged “{tag}”</h1>
        {
            posts.length === 0 ? (
                <p>No posts found.</p>
            ) : (
                <ul class="space-y-8">
                    {posts.map(({ slug, data }) => (
                        <li>
                            <a href={`/blog/${slug}/`} class="block group">
                                <h2 class="text-xl font-medium group-hover:underline">{data.title}</h2>
                                <p class="text-sm opacity-80">{data.description}</p>
                                <p class="text-xs mt-1">{data.pubDate.toLocaleDateString()}</p>
                            </a>
                        </li>
                    ))}
                </ul>
            )
        }
    </main>
</Layout>
